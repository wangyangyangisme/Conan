Conan 0.9.2 release
-------------------

Bugfixes:
    -There was a problem with conan::priv::BuildSlotData, where a signal->signal
    conection would be processed as a signal->slot connection.


Feature additions:
    -Added a tool button that searches for duplicate signal connections. Such
    connections are marked yellow.

Changes:
    -Added support for Qt 4.5.0
    -Changed the README.txt with information on how to use Conan with a
    commercial edition of Qt


Conan 0.9.4 release
-------------------

Bugfixes:
    -There was a problem with conan::priv::BuildSlotData while processing a
    manually created connection. QSignalSpy and conan::SignalSpy are examples
    of classes that create such connections. They do not have signals or slots
    and are not processed by MOC. Instead they call the internal
    QMetaObject::connect directly.

Feature additions:
    -Added dynamic signal spies. A signal spy monitors the emissions of a
    single signal. Information about each emissions is logged using a
    customizable format.

Changes:
    -Added support for Qt 4.5.1
    -Updated the README.txt and extended the documentation about using Conan in
    /dec/html/index.html


Conan 0.9.5 release
-------------------

Bugfixes:
    -Fixed a problem with deleting multiple signal spies from the sinal spy table.

Changes:
    -Added support for Qt 4.5.2
    -Added project file for use with the Qt Creator IDE and or qmake


Conan 0.9.7 release
-------------------

Bugfixes:

Feature additions:
    -Added export to xml option.
    -Added class info viewer for showing data set with Q_CLASSINFO.

Changes:
    -Added support for Qt 4.6.0 - Qt 4.6.3
    -Dropped support for Qt versions older then 4.6.0

Known issues:
    -The list of signals for the current selected object only shows 'out' connections where the
     current object is the 'sender'. Suppose the following connection exists:
     objectA::signalA() --> objectB::signalB(). This connection will be shown when objectA is
     selected, but not when objectB is selected.
    -Since Qt 4.6.0, it is required to lock a specific mutex before accessing the connection data
     of an object. Unfortunately, this mutex is only accessible from within qobject.cpp. This
     means that conan::ConanWidget is not thread safe. To be fair, this is not such a big deal
     during normal use. Connections are usually made during or after Object construction, and for
     the large part this is done on the gui thread (where Conan lives).


Conan 0.9.8 release
-------------------

Bugfixes:
    -Fixed a problem where sorting the object tree view resulted in invalid QPersistentModelIndex
    -Fixed a string formatting issue in ObjectUtility::Address
    -Fixed compilation issues when compiling under Linux, teted with Qt Creator 1.3.1 and Qt 4.6.2
     on Ubuntu 10.4

Feature additions:
    -Remove root object.

Changes:
    -Added support for Qt 4.7.0
    -Renamed output folder from bin to lib
    -The columns on the Objects Hierarchy page can now be manually resized, where they would
     previously automatically resize to their contents.

Known issues:
    -The list of signals for the current selected object only shows 'out' connections where the
     current object is the 'sender'. Suppose the following connection exists:
     objectA::signalA() --> objectB::signalB(). This connection will be shown when objectA is
     selected, but not when objectB is selected.
    -Since Qt 4.6.0, it is required to lock a specific mutex before accessing the connection data
     of an object. Unfortunately, this mutex is only accessible from within qobject.cpp. This
     means that conan::ConanWidget is not thread safe. To be fair, this is not such a big deal
     during normal use. Connections are usually made during or after Object construction, and for
     the large part this is done on the gui thread (where Conan lives).
